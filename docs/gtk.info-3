This is gtk.info, produced by makeinfo version 4.0 from gtk.texi.

   This file documents GTK, the GIMP Toolkit

   Copyright (C) 1996 Peter Mattis Copyright (C) 1997 Peter Mattis

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by Peter Mattis.

INFO-DIR-SECTION User Interface Toolkit
START-INFO-DIR-ENTRY
* GTK: (gtk).		The GIMP Toolkit
END-INFO-DIR-ENTRY


File: gtk.info,  Node: GtkEntry,  Next: GtkEventBox,  Prev: GtkDrawingArea,  Up: Widgets

The entry widget
================

Description
-----------

   Enter text into this widget.  Derived from GtkEditable.  Can be set
so it isn't editable.

Options
-------

 - User Option: max
     With this option it is possible to set the TEXT_MAX_LENGTH to the
     value specified in the MAX option. This value is a guint16 value.

 - User Option: text
     With this option it is possible to 'preload' the text that will be
     displayed in the `entry' widget to the string pointed to by TEXT.

Signals
-------

 - Signal: void GtkEntry::insert_text (GtkEntry *ENTRY, gchar *TEXT,
          gint LENGTH, gint *POSITION)

 - Signal: void GtkEntry::delete_text (GtkEntry *ENTRY, gint START_POS,
          gint END_POS)

 - Signal: void GtkEntry::changed (GtkEntry *ENTRY)

 - Signal: void GtkEntry::set_text (GtkEntry *ENTRY)

 - Signal: void GtkEntry::activate (GtkEntry *ENTRY)

Functions
---------

 - Function: guint gtk_entry_get_type (void)
     Returns the `GtkEntry' type identifier.

 - Function: GtkWidget* gtk_entry_new (void)
     Create a new `GtkEntry' object. The new widget is returned as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_entry_new_with_max_length (guint16 MAX)
     Create a new `GtkEntry' object initializing it with the value MAX.
     The new widget is returned as a pointer to a `GtkWidget' object.
     `NULL' is returned on failure.

 - Function: void gtk_entry_set_text (GtkEntry *ENTRY, gchar *TEXT)
     Will set the text in the previously created `GtkEntry' object to
     TEXT. It is important to not set the fields of the `GtkEntry'
     structure directly (or, for that matter, any type derived from
     `GtkObject').

 - Function: void gtk_entry_append_text (GtkEntry *ENTRY, gchar *TEXT)
     Append the text that is in the TEXT argument to the widgets text.
     It is important to not set the fields of the `GtkEntry' structure
     directly.

 - Function: void gtk_entry_prepend_text (GtkEntry *ENTRY, gchar *TEXT)
     Add the text in the TEXT argument to the text in the `GtkEntry'
     widget. It is important to not set the fields of the `GtkEntry'
     structure directly.

 - Function: void gtk_entry_set_position (GtkEntry *ENTRY, gint
          POSITION)

 - Function: void gtk_entry_set_visibility (GtkEntry *ENTRY, gint
          VISIBLE)
     Will make the keystrokes entered into the `GtkEntry' object
     invisible when VISIBLE is `TRUE'. Defaults to `FALSE'.

 - Function: gchar* gtk_entry_get_text (GtkEntry *ENTRY)
     Returns the text that is contained in the `GtkEntry' as a pointer
     to a `gchar' variable.

 - Function: GtkEntry* GTK_ENTRY (gpointer OBJ)
     Cast a generic pointer to `GtkEntry*'. *Note Standard Macros::, for
     more info.

 - Function: GtkEntryClass* GTK_ENTRY_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkEntryClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_ENTRY (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkEntry' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkEventBox,  Next: GtkFileSelection,  Prev: GtkEntry,  Up: Widgets

The event box widget
====================

Description
-----------

   Derived from *note GtkBin::.  Used by *note GtkTreeItem::.

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_event_box_get_type (void)
     Returns the `GtkEventBox' type identifier.

 - Function: GtkWidget* gtk_event_box_new (void)
     Create a new `GtkEventBox' returning the new widget as a pointer to
     a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkGtkEventBox* GTK_EVENT_BOX (gpointer OBJ)
     Cast a generic pointer to `GtkGtkEventBox*'. *Note Standard
     Macros::, for more info.

 - Function: GtkGtkEventBoxClass* GTK_EVENT_BOX_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkGtkEventBoxClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_EVENT_BOX (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkGtkEventBox'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkFileSelection,  Next: GtkFixed,  Prev: GtkEventBox,  Up: Widgets

The file selection dialog widget
================================

Description
-----------

Options
-------

 - User Option: title

 - User Option: filename

Signals
-------

Functions
---------

 - Function: guint gtk_file_selection_get_type (void)
     Returns the `GtkFileSelection' type identifier.

 - Function: GtkWidget* gtk_file_selection_new (gchar *TITLE)
     Create a new `GtkFileSelection' object and return the new widget
     as a pointer to a `GtkWidget'. `NULL' is returned on failure.

 - Function: void gtk_file_selection_set_filename (GtkFileSelection
          *FILESEL, gchar *FILENAME)

 - Function: gchar* gtk_file_selection_get_filename (GtkFileSelection
          *FILESEL)

 - Function: GtkFileSelection* GTK_FILE_SELECTION (gpointer OBJ)
     Cast a generic pointer to `GtkFileSelection*'. *Note Standard
     Macros::, for more info.

 - Function: GtkFileSelectionClass* GTK_FILE_SELECTION_CLASS (gpointer
          CLASS)
     Cast a generic pointer to `GtkFileSelectionClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_FILE_SELECTION (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkFileSelection'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkFixed,  Next: GtkFrame,  Prev: GtkFileSelection,  Up: Widgets

The fixed widget
================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_fixed_get_type (void)
     Returns the `GtkFixed' type identifier.

 - Function: GtkWidget* gtk_fixed_new (void)
     Create a new `GtkFixed' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_fixed_put_new (GtkFixed *FIXED, GtkWidget
          *WIDGET, gint16 X, gint16 Y)

 - Function: void gtk_fixed_move (GtkFixed *FIXED, GtkWidget *WIDGET,
          gint16 X, gint16 Y)

 - Function: GtkFixed* GTK_FIXED (gpointer OBJ)
     Cast a generic pointer to `GtkFixed*'. *Note Standard Macros::, for
     more info.

 - Function: GtkFixedClass* GTK_FIXED_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkFixedClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_FIXED (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkFixed' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkFrame,  Next: GtkGamma,  Prev: GtkFixed,  Up: Widgets

The frame widget
================

Options
-------

 - User Option: label

 - User Option: xalign

 - User Option: yalign

 - User Option: type

Description
-----------

Signals
-------

Functions
---------

 - Function: guint gtk_frame_get_type (void)
     Returns the `GtkFrame' type identifier.

 - Function: GtkWidget* gtk_frame_new (gchar *LABEL)
     Create a new `GtkFrame' object initializing it with the value in
     LABEL. The new widget is returned as a pointer to a `GtkWidget'
     object. `NULL' is returned on failure.

 - Function: void gtk_frame_set_label (GtkFrame *FRAME, gchar *LABEL)

 - Function: void gtk_frame_set_label_align (GtkFrame *FRAME, gfloat
          XALIGN, gfloat YALIGN)

 - Function: void gtk_frame_set_shadow_type (GtkFrame *FRAME,
          GtkShadowType TYPE)

 - Function: GtkFrame* GTK_FRAME (gpointer OBJ)
     Cast a generic pointer to `GtkFrame*'. *Note Standard Macros::, for
     more info.

 - Function: GtkFrameClass* GTK_FRAME_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkFrameClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_FRAME (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkFrame' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkGamma,  Next: GtkHBox,  Prev: GtkFrame,  Up: Widgets

The gamma widget
================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_gamma_curve_get_type (void)
     Returns the `GtkGamma' type identifier.

 - Function: GtkWidget* gtk_gamma_curve_new (void)
     Create a new `GtkGamma' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkGamma* GTK_GAMMA (gpointer OBJ)
     Cast a generic pointer to `GtkGamma*'. *Note Standard Macros::, for
     more info.

 - Function: GtkGammaClass* GTK_GAMMA_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkGammaClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_GAMMA (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkGamma' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHBox,  Next: GtkHButtonBox,  Prev: GtkGamma,  Up: Widgets

The horizontal box widget
=========================

Description
-----------

Options
-------

 - User Option: homogeneous
     This option controls whether each object in the box has the same
     size. In the case of the `GtkHBox', this effects the width. If
     this option is set then the EXPAND option to the `gtk_box_pack'
     (*note GtkBox::) routines is always set to `TRUE'.

 - User Option: spacing
     This option controls the amount of space that is added between the
     objects packed into this `GtkVBox' object.

Signals
-------

Functions
---------

 - Function: guint gtk_hbox_get_type (void)
     Returns the `GtkHBox' type identifier.

 - Function: GtkWidget* gtk_hbox_new (gint HOMOGENEOUS, gint SPACING)
     Create a new `GtkHBox' object initializing it with the values in
     HOMOGENEOUS and SPACING. The new widget is returned as a pointer
     to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkHBox* GTK_HBOX (gpointer OBJ)
     Cast a generic pointer to `GtkHBox*'. *Note Standard Macros::, for
     more info.

 - Function: GtkHBoxClass* GTK_HBOX_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHBoxClass*'. *Note Standard Macros::,
     for more info.

 - Function: gint GTK_IS_HBOX (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHBox' object. *Note
     Standard Macros::, for more info.


File: gtk.info,  Node: GtkHButtonBox,  Next: GtkHPaned,  Prev: GtkHBox,  Up: Widgets

The horizontal button box widget
================================

Description
-----------

Options
-------

 - User Option: spacing

 - User Option: layout

Signals
-------

Functions
---------

 - Function: guint gtk_hbutton_box_get_type (void)
     Returns the `GtkHButtonBox' type identifier.

 - Function: GtkWidget* gtk_hbutton_box_new (void)
     Create a new `GtkHButtonBox' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_hbutton_box_set_spacing_default (gint SPACING)

 - Function: void gtk_hbutton_box_set_layout_default (gint LAYOUT)

 - Function: gint gtk_hbutton_box_get_spacing_default (void)

 - Function: gint gtk_hbutton_box_get_layout_default (void)

 - Function: GtkHButtonBox* GTK_HBUTTON_BOX (gpointer OBJ)
     Cast a generic pointer to `GtkHButtonBox*'. *Note Standard
     Macros::, for more info.

 - Function: GtkHButtonBoxClass* GTK_HBUTTON_BOX_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHButtonBoxClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HBUTTON_BOX (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHButtonBox' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHPaned,  Next: GtkHRuler,  Prev: GtkHButtonBox,  Up: Widgets

The horizontal paned widget
===========================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: void gtk_hpaned_get_type (void)
     Returns the `GtkHPaned' type identifier.

 - Function: GtkWidget* gtk_hpaned_new (void)
     Create a new `GtkHPaned' object returning the new widget as a
     pointer to a `GtkWidget' object.

 - Function: GtkHPaned* GTK_HPANED (gpointer OBJ)
     Cast a generic pointer to `GtkHPaned*'. *Note Standard Macros::,
     for more info.

 - Function: GtkHPanedClass* GTK_HPANED_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHPanedClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HPANED (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHPaned' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHRuler,  Next: GtkHScale,  Prev: GtkHPaned,  Up: Widgets

The horizontal ruler widget
===========================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_hruler_get_type (void)
     Returns the `GtkHRuler' type identifier.

 - Function: GtkWidget* gtk_hruler_new (void)
     Create a new `GtkHRuler' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkHRuler* GTK_HRULER (gpointer OBJ)
     Cast a generic pointer to `GtkHRuler*'. *Note Standard Macros::,
     for more info.

 - Function: GtkHRulerClass* GTK_HRULER_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHRulerClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HRULER (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHRuler' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHScale,  Next: GtkHScrollbar,  Prev: GtkHRuler,  Up: Widgets

The horizontal scale widget
===========================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_hscale_get_type (void)
     Returns the `GtkHScale' type identifier.

 - Function: GtkWidget* gtk_hscale_new (GtkAdjustment *ADJUSTMENT)
     Create a new `GtkHScale' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkHScale* GTK_HSCALE (gpointer OBJ)
     Cast a generic pointer to `GtkHScale*'. *Note Standard Macros::,
     for more info.

 - Function: GtkHScaleClass* GTK_HSCALE_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHScaleClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HSCALE (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHScale' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHScrollbar,  Next: GtkHSeparator,  Prev: GtkHScale,  Up: Widgets

The horizontal scrollbar widget
===============================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_hscrollbar_get_type (void)
     Returns the `GtkHScrollbar' type identifier.

 - Function: GtkWidget* gtk_hscrollbar_new (GtkAdjustment *ADJUSTMENT)
     Create a new `GtkHScrollbar' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkHScrollbar* GTK_HSCROLLBAR (gpointer OBJ)
     Cast a generic pointer to `GtkHScrollbar*'. *Note Standard
     Macros::, for more info.

 - Function: GtkHScrollbarClass* GTK_HSCROLLBAR_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHScrollbarClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HSCROLLBAR (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHScrollbar' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkHSeparator,  Next: GtkImage,  Prev: GtkHScrollbar,  Up: Widgets

The horizontal separator widget
===============================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_hseparator_get_type (void)
     Returns the `GtkHSeparator' type identifier.

 - Function: GtkWidget* gtk_hseparator_new (void)
     Create a new `GtkHSeparator' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkHSeparator* GTK_HSEPARATOR (gpointer OBJ)
     Cast a generic pointer to `GtkHSeparator*'. *Note Standard
     Macros::, for more info.

 - Function: GtkHSeparatorClass* GTK_HSEPARATOR_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkHSeparatorClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_HSEPARATOR (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkHSeparator' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkImage,  Next: GtkInputDialog,  Prev: GtkHSeparator,  Up: Widgets

The image widget
================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_image_get_type (void)
     Returns the `GtkImage' type identifier.

 - Function: GtkWidget* gtk_image_new (GdkImage *VAL, GdkBitmap *MASK)
     Create a new `GtkImage' object initializing it with the values in
     VAL and MASK. The new widget is returned as a pointer to a
     `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_image_set (GtkImage *IMAGE, GdkImage *VAL,
          GdkBitmap *MASK)

 - Function: void gtk_image_get (GtkImage *IMAGE, GdkImage **VAL,
          GdkBitmap **MASK)

 - Function: GtkImage* GTK_IMAGE (gpointer OBJ)
     Cast a generic pointer to `GtkImage*'. *Note Standard Macros::, for
     more info.

 - Function: GtkImageClass* GTK_IMAGE_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkImageClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_IMAGE (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkImage' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkInputDialog,  Next: GtkItem,  Prev: GtkImage,  Up: Widgets

The input dialog widget
=======================

Description
-----------

Options
-------

Signals
-------

 - Signal: void GtkInputDialog::enable_device (GtkInputDialog *INPUTD,
          guint32 DEVID, gpointer *DATA)

 - Signal: void GtkInputDialog::disable_device (GtkInputDialog *INPUTD,
          guint32 DEVID, gpointer *DATA)

Functions
---------

 - Function: guint gtk_input_dialog_get_type (void)
     Returns the `GtkInputDialog' type identifier.

 - Function: GtkWidget* gtk_input_dialog_new (void)
     Create a new `GtkInputDialog' object and return the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkInputDialog* GTK_INPUTDIALOG (gpointer OBJ)
     Cast a generic pointer to `GtkInputDialog*'. *Note Standard
     Macros::, for more info.

 - Function: GtkInputDialogClass* GTK_INPUTDIALOG_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkInputDialogClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_INPUTDIALOG (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkInputDialog'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkItem,  Next: GtkLabel,  Prev: GtkInputDialog,  Up: Widgets

The item widget
===============

Description
-----------

Signals
-------

 - Signal: void GtkItem::select (GtkItem *ITEM)

 - Signal: void GtkItem::deselect (GtkItem *ITEM)

 - Signal: void GtkItem::toggle (GtkItem *TOGGLE)

Functions
---------

 - Function: guint gtk_item_get_type (void)
     Returns the `GtkItem' type identifier.

 - Function: void gtk_item_select (GtkItem *ITEM)

 - Function: void gtk_item_deselect (GtkItem *ITEM)

 - Function: void gtk_item_toggle (GtkItem *ITEM)

 - Function: GtkItem* GTK_ITEM (gpointer OBJ)
     Cast a generic pointer to `GtkItem*'. *Note Standard Macros::, for
     more info.

 - Function: GtkItemClass* GTK_ITEM_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkItemClass*'. *Note Standard Macros::,
     for more info.

 - Function: gint GTK_IS_ITEM (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkItem' object. *Note
     Standard Macros::, for more info.


File: gtk.info,  Node: GtkLabel,  Next: GtkList,  Prev: GtkItem,  Up: Widgets

The label widget
================

Description
-----------

Options
-------

 - User Option: str

Signals
-------

Functions
---------

 - Function: guint gtk_label_get_type (void)
     Returns the `GtkLabel' type identifier.

 - Function: GtkWidget* gtk_label_new (GtkLabel *LABEL, gchar *STR)
     Create a new `GtkLabel' object and initialize it with the text in
     STR. The new widget is returned as a pointer to a `GtkWidget'
     object. `NULL' is returned on failure.

 - Function: void gtk_label_set (GtkLabel *LABEL, gchar *STR)
     Set the `GtkLabel' label value to the value passed in the STR
     argument.

 - Function: void gtk_label_get (GtkLabel *LABEL, gchar **STR)
     Copies the current value in the `GtkLabel' label field to the
     variable passed in the STR argument.

 - Function: GtkLabel* GTK_LABEL (gpointer OBJ)
     Cast a generic pointer to `GtkLabel*'. *Note Standard Macros::, for
     more info.

 - Function: GtkLabelClass* GTK_LABEL_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkLabelClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_LABEL (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkLabel' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkList,  Next: GtkListItem,  Prev: GtkLabel,  Up: Widgets

The list widget
===============

Description
-----------

Signals
-------

 - Signal: void GtkList::selection_changed (GtkList *LIST)

 - Signal: void GtkList::select_child (GtkList *LIST, GtkWidget *CHILD)

 - Signal: void GtkList::unselect_child (GtkList *LIST, GtkWidget
          *CHILD)

Functions
---------

 - Function: guint gtk_list_get_type (void)
     Returns the `GtkList' type identifier.

 - Function: GtkWidget* gtk_list_new (void)
     Create a new `GtkList' object and return the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_list_insert_items (GtkList *LIST, GList *ITEMS,
          gint POSITION)

 - Function: void gtk_list_append_items (GtkList *LIST, GList *ITEMS)

 - Function: void gtk_list_prepend_items (GtkList *LIST, GList *ITEMS)

 - Function: void gtk_list_remove_items (GtkList *LIST, GList *ITEMS)

 - Function: void gtk_list_clear_items (GtkList *LIST, gint START, gint
          END)

 - Function: void gtk_list_select_item (GtkList *LIST, gint ITEM)

 - Function: void gtk_list_unselect_item (GtkList *LIST, gint ITEM)

 - Function: void gtk_list_select_child (GtkList *LIST, GtkWidget
          *CHILD)

 - Function: void gtk_list_unselect_child (GtkList *LIST, GtkWidget
          *CHILD)

 - Function: gint gtk_list_child_position (GtkList *LIST, GtkWidget
          *CHILD)

 - Function: void gtk_list_set_selection_mode (GtkList *LIST,
          GtkSelectionMode MODE)

 - Function: GtkList* GTK_LIST (gpointer OBJ)
     Cast a generic pointer to `GtkList*'. *Note Standard Macros::, for
     more info.

 - Function: GtkListClass* GTK_LIST_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkListClass*'. *Note Standard Macros::,
     for more info.

 - Function: gint GTK_IS_LIST (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkList' object. *Note
     Standard Macros::, for more info.


File: gtk.info,  Node: GtkListItem,  Next: GtkMenu,  Prev: GtkList,  Up: Widgets

The list item widget
====================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_list_item_get_type (void)
     Returns the `GtkListItem' type identifier.

 - Function: GtkWidget* gtk_list_item_new (void)
     Create a new `GtkListItem' object and return the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_list_item_new_with_label (gchar *LABEL)
     Create a new `GtkListItem' object initializing with the value
     LABEL.  The new widget is returned as a pointer to a `GtkWidget'
     object.  `NULL' is returned on failure.

 - Function: void gtk_list_item_select (GtkListItem *LIST_ITEM)

 - Function: void gtk_list_item_deselect (GtkListItem *LIST_ITEM)

 - Function: GtkListItem* GTK_LIST_ITEM (gpointer OBJ)
     Cast a generic pointer to `GtkListItem*'. *Note Standard Macros::,
     for more info.

 - Function: GtkListItemClass* GTK_LIST_ITEM_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkListItemClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_LIST_ITEM (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkListItem' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkMenu,  Next: GtkMenuBar,  Prev: GtkListItem,  Up: Widgets

The menu widget
===============

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_menu_get_type (void)
     Returns the `GtkMenu' type identifier.

 - Function: GtkWidget* gtk_menu_new (void)
     Create a new `GtkMenu' object returning the new widget as a
     pointer to a `GtkWidget'. `NULL' is returned on failure.

 - Function: void gtk_menu_append (GtkMenu *MENU, GtkWidget *CHILD)

 - Function: void gtk_menu_prepend (GtkMenu *MENU, GtkWidget *CHILD)

 - Function: void gtk_menu_insert (GtkMenu *MENU, GtkWidget *CHILD,
          gint POSITION)

 - Function: void gtk_menu_popup (GtkMenu *MENU, GtkWidget
          *PARENT_MENU_SHELL, GtkWidget *PARENT_MENU_ITEM,
          GtkMenuPositionFunc FUNC, gpointer DATA, gint BUTTON)

 - Function: void gtk_menu_popdown (GtkMenu *MENU)

 - Function: GtkWidget* gtk_menu_get_active (GtkMenu *MENU)

 - Function: void gtk_menu_set_active (GtkMenu *MENU)

 - Function: void gtk_menu_set_accelerator_table (GtkMenu *MENU,
          GtkAcceleratorTable *TABLE)

 - Function: GtkMenu* GTK_MENU (gpointer OBJ)
     Cast a generic pointer to `GtkMenu*'. *Note Standard Macros::, for
     more info.

 - Function: GtkMenuClass* GTK_MENU_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkMenuClass*'. *Note Standard Macros::,
     for more info.

 - Function: gint GTK_IS_MENU (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkMenu' object. *Note
     Standard Macros::, for more info.


File: gtk.info,  Node: GtkMenuBar,  Next: GtkMenuItem,  Prev: GtkMenu,  Up: Widgets

The menu bar widget
===================

Description
-----------

Options
-------

 - User Option: position

Signals
-------

Functions
---------

 - Function: guint gtk_menu_bar_get_type (void)
     Returns the `GtkMenuBar' type identifier.

 - Function: GtkWidget* gtk_menu_bar_new (void)
     Create a new `GtkMenuBar' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_menu_bar_append (GtkMenuBar *MENU_BAR, GtkWidget
          *CHILD)

 - Function: void gtk_menu_bar_prepend (GtkMenuBar *MENU_BAR, GtkWidget
          *CHILD)

 - Function: void gtk_menu_bar_insert (GtkMenuBar *MENU_BAR, GtkWidget
          *CHILD, gint POSITION)

 - Function: GtkMenuBar* GTK_MENU_BAR (gpointer OBJ)
     Cast a generic pointer to `GtkMenuBar*'. *Note Standard Macros::,
     for more info.

 - Function: GtkMenuBarClass* GTK_MENU_BAR_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkMenuBarClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_MENU_BAR (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkMenuBar' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkMenuItem,  Next: GtkMenuShell,  Prev: GtkMenuBar,  Up: Widgets

The menu item widget
====================

Description
-----------

Options
-------

Signals
-------

 - Signal: void GtkMenuItem::activate (GtkMenuItem *MENU_ITEM)

Functions
---------

 - Function: guint gtk_menu_item_get_type (void)
     Returns the `GtkMenuItem' type identifier.

 - Function: GtkWidget* gtk_menu_item_new (void)
     Create a new `GtkMenuItem' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_menu_item_new_with_label (gchar *LABEL)
     Create a new `GtkMenuItem' object initializing it with the value in
     LABEL. The new widget is returned as a pointer to a `GtkWidget'
     object. `NULL' is returned on failure.

 - Function: void gtk_menu_item_set_submenu (GtkMenuItem *MENU_ITEM,
          GtkWidget *SUBMENU)

 - Function: void gtk_menu_item_set_placement (GtkMenuItem *MENU_ITEM,
          GtkSubmenuPlacement PLACEMENT)

 - Function: void gtk_menu_item_accelerator_size (GtkMenuItem
          *MENU_ITEM)

 - Function: void gtk_menu_item_accelerator_text (GtkMenuItem
          *MENU_ITEM, gchar *BUFFER)

 - Function: void gtk_menu_item_configure (GtkMenuItem *MENU_ITEM, gint
          SHOW_TOGGLE_INDICATOR, gint SHOW_SUBMENU_INDICATOR)

 - Function: void gtk_menu_item_select (GtkMenuItem *MENU_ITEM)

 - Function: void gtk_menu_item_deselect (GtkMenuItem *MENU_ITEM)

 - Function: void gtk_menu_item_activate (GtkMenuItem *MENU_ITEM)

 - Function: GtkMenuItem* GTK_MENU_ITEM (gpointer OBJ)
     Cast a generic pointer to `GtkMenuItem*'. *Note Standard Macros::,
     for more info.

 - Function: GtkMenuItemClass* GTK_MENU_ITEM_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkMenuItemClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_MENU_ITEM (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkMenuItem' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkMenuShell,  Next: GtkMisc,  Prev: GtkMenuItem,  Up: Widgets

The menu shell widget
=====================

Description
-----------

Options
-------

Signals
-------

 - Signal: void GtkMenuShell::deactivate (GtkMenuShell *MENU_SHELL)

Functions
---------

 - Function: guint gtk_menu_shell_get_type (void)
     Returns the `GtkMenuShell' type identifier.

 - Function: void gtk_menu_shell_append (GtkMenuShell *MENU_SHELL,
          GtkWidget *CHILD)

 - Function: void gtk_menu_shell_prepend (GtkMenuShell *MENU_SHELL,
          GtkWidget *CHILD)

 - Function: void gtk_menu_shell_insert (GtkMenuShell *MENU_SHELL,
          GtkWidget *CHILD, gint POSITION)

 - Function: void gtk_menu_shell_deactivate (GtkMenuShell *MENU_SHELL)

 - Function: GtkMenuShell* GTK_MENU_SHELL (gpointer OBJ)
     Cast a generic pointer to `GtkMenuShell*'. *Note Standard
     Macros::, for more info.

 - Function: GtkMenuShellClass* GTK_MENU_SHELL_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkMenuShellClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_MENU_SHELL (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkMenuShell' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkMisc,  Next: GtkNotebook,  Prev: GtkMenuShell,  Up: Widgets

The misc widget
===============

Description
-----------

Options
-------

 - User Option: xalign

 - User Option: yalign

 - User Option: xpad

 - User Option: ypad

Signals
-------

Functions
---------

 - Function: guint gtk_misc_get_type (void)
     Returns the `GtkMisc' type identifier.

 - Function: void gtk_misc_set_alignment (GtkMisc *MISC, gfloat XALIGN,
          gfloat YALIGN)

 - Function: void gtk_misc_set_padding (GtkMisc *MISC, gint XPAD, gint
          YPAD)

 - Function: GtkMisc* GTK_MISC (gpointer OBJ)
     Cast a generic pointer to `GtkMisc*'. *Note Standard Macros::, for
     more info.

 - Function: GtkMiscClass* GTK_MISC_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkMiscClass*'. *Note Standard Macros::,
     for more info.

 - Function: gint GTK_IS_MISC (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkMisc' object. *Note
     Standard Macros::, for more info.


File: gtk.info,  Node: GtkNotebook,  Next: GtkOptionMenu,  Prev: GtkMisc,  Up: Widgets

The notebook widget
===================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_notebook_get_type (void)
     Returns the `GtkNotebook' type identifier.

 - Function: GtkWidget* gtk_notebook_new (void)
     Create a new `GtkNotebook' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on a failure.

 - Function: void gtk_notebook_append_page (GtkNotebook *NOTEBOOK,
          GtkWidget *CHILD, GtkWidget *TAB_LABEL)

 - Function: void gtk_notebook_prepend_page (GtkNotebook *NOTEBOOK,
          GtkWidget *CHILD, GtkWidget *TAB_LABEL)

 - Function: void gtk_notebook_insert_page (GtkNotebook *NOTEBOOK,
          GtkWidget *CHILD, GtkWidget *TAB_LABEL, gint POSITION)

 - Function: void gtk_notebook_remove_page (GtkNotebook *NOTEBOOK, gint
          PAGE_NUM)

 - Function: void gtk_notebook_set_page (GtkNotebook *NOTEBOOK, gint
          PAGE_NUM)

 - Function: void gtk_notebook_next_page (GtkNotebook *NOTEBOOK)

 - Function: void gtk_notebook_prev_page (GtkNotebook *NOTEBOOK)

 - Function: void gtk_notebook_set_tab_pos (GtkNotebook *NOTEBOOK,
          GtkPositionType POS)

 - Function: void gtk_notebook_set_show_tabs (GtkNotebook *NOTEBOOK,
          gint SHOW_TABS)

 - Function: void gtk_notebook_set_show_border (GtkNotebook *NOTEBOOK,
          gint SHOW_BORDER)

 - Function: GtkNotebook* GTK_NOTEBOOK (gpointer OBJ)
     Cast a generic pointer to `GtkNotebook*'. *Note Standard Macros::,
     for more info.

 - Function: GtkNotebookClass* GTK_NOTEBOOK_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkNotebookClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_NOTEBOOK (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkNotebook' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkOptionMenu,  Next: GtkPaned,  Prev: GtkNotebook,  Up: Widgets

The option menu widget
======================

Description
-----------

Options
-------

 - User Option: index

Signals
-------

Functions
---------

 - Function: guint gtk_option_menu_get_type (void)
     Returns the `GtkOptionMenu' type identifier.

 - Function: GtkWidget* gtk_option_menu_new (void)
     Create a new `GtkOptionMenu' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_option_menu_get_menu (GtkOptionMenu
          *OPTION_MENU)

 - Function: void gtk_option_menu_set_menu (GtkOptionMenu *OPTION_MENU,
          GtkWidget *MENU)

 - Function: void gtk_option_menu_remove_menu (GtkOptionMenu
          *OPTION_MENU)

 - Function: void gtk_option_menu_set_history (GtkOptionMenu
          *OPTION_MENU, gint INDEX)

 - Function: GtkOptionMenu* GTK_OPTION_MENU (gpointer OBJ)
     Cast a generic pointer to `GtkOptionMenu*'. *Note Standard
     Macros::, for more info.

 - Function: GtkOptionMenuClass* GTK_OPTION_MENU_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkOptionMenuClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_OPTION_MENU (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkOptionMenu' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkPaned,  Next: GtkPixmap,  Prev: GtkOptionMenu,  Up: Widgets

The paned widget
================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_paned_get_type (void)
     Returns the `GtkPaned' type identifier.

 - Function: void gtk_paned_add1 (GtkPaned *PANED, GtkWidget *CHILD)

 - Function: void gtk_paned_add2 (GtkPaned *PANED, GtkWidget *CHILD)

 - Function: void gtk_paned_handle_size (GtkPaned *PANED, guint16 SIZE)

 - Function: void gtk_paned_gutter_size (GtkPaned *PANED, guint16 SIZE)

 - Function: GtkPaned* GTK_PANED (gpointer OBJ)
     Cast a generic pointer to `GtkPaned*'. *Note Standard Macros::, for
     more info.

 - Function: GtkPanedClass* GTK_PANED_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkPanedClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_PANED (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkPaned' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkPixmap,  Next: GtkPreview,  Prev: GtkPaned,  Up: Widgets

The pixmap widget
=================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_pixmap_get_type (void)
     Returns the `GtkPixmap' type identifier.

 - Function: GtkWidget* gtk_pixmap_new (GdkPixmap *NORMAL, GdkPixmap
          *ACTIVE, GdkPixmap *PRELIGHT, GdkPixmap *SELECTED, GdkPixmap
          *INSENSITIVE)

 - Function: void gtk_pixmap_set (GtkPixmap *PIXMAP, GdkPixmap *VAL,
          GtkStateType STATE)

 - Function: void gtk_pixmap_get (GtkPixmap *PIXMAP, GdkPixmap **VAL,
          GtkStateType STATE)

 - Function: GtkPixmap* GTK_PIXMAP (gpointer OBJ)
     Cast a generic pointer to `GtkPixmap*'. *Note Standard Macros::,
     for more info.

 - Function: GtkPixmapClass* GTK_PIXMAP_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkPixmapClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_PIXMAP (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkPixmap' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkPreview,  Next: GtkProgressBar,  Prev: GtkPixmap,  Up: Widgets

The preview widget
==================

Description
-----------

Options
-------

 - User Option: type

 - User Option: width

 - User Option: height

Signals
-------

Functions
---------

 - Function: guint gtk_preview_get_type (void)
     Returns the `GtkPreview' type identifier.

 - Function: void gtk_preview_uninit (void)

 - Function: GtkWidget* gtk_preview_new (GtkPreviewType TYPE)
     Create a new `GtkPreview' object initializing it with the values in
     TYPE. The new widget is returned as a pointer to a `GtkWidget'
     object. `NULL' is returned on failure.

 - Function: void gtk_preview_size (GtkPreview *PREVIEW, gint WIDTH,
          gint HEIGHT)
     Set the size of the PREVIEW object to WIDTH and HEIGHT.

 - Function: void gtk_preview_put (GtkPreview *PREVIEW, GdkWindow
          *WINDOW, GdkGC *GC, gint SRCX, gint SRCY, gint DESTX, gint
          DESTY, gint WIDTH, gint HEIGHT)

 - Function: void gtk_preview_put_row (GtkPreview *PREVIEW, guchar
          *SRC, guchar *DEST, gint X, gint Y, gint W)

 - Function: void gtk_preview_draw_row (GtkPreview *PREVIEW, guchar
          DATA, gint X, gint Y, gint W)

 - Function: void gtk_preview_set_expand (GtkPreview *PREVIEW, gint
          EXPAND)

 - Function: void gtk_preview_set_gamma (double GAMMA)

 - Function: void gtk_preview_set_color_cube (guint NRED_SHADES, guint
          NGREEN_SHADES, guint NBLUE_SHADES, guint NGRAY_SHADES)

 - Function: void gtk_preview_set_install_cmap (gint INSTALL_CMAP)

 - Function: void gtk_preview_set_reserved (gint NRESERVED)

 - Function: GdkVisual* gtk_preview_get_visual (void)

 - Function: GdkColormap* gtk_preview_get_cmap (void)

 - Function: GtkPreviewInfo* gtk_preview_get_info (void)

 - Function: GtkPreview* GTK_PREVIEW (gpointer OBJ)
     Cast a generic pointer to `GtkPreview*'. *Note Standard Macros::,
     for more info.

 - Function: GtkPreviewClass* GTK_PREVIEW_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkPreviewClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_PREVIEW (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkPreview' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkProgressBar,  Next: GtkRadioButton,  Prev: GtkPreview,  Up: Widgets

The progress bar widget
=======================

Description
-----------

Options
-------

 - User Option: percentage

Signals
-------

Functions
---------

 - Function: guint gtk_progress_bar_get_type (void)
     Returns the `GtkProgressBar' type identifier.

 - Function: GtkWidget* gtk_progress_bar_new (void)
     Create a new `GtkProgressBar' object returning the new widget as a
     pointer to a `GtkWidget' object. `NULL' is returned on failure.

 - Function: void gtk_progress_bar_update (GtkProgressBar *PBAR, gfloat
          PERCENTAGE)
     Cause the `GtkProgressBar' to update its visual appearance to
     reflect the PERCENTAGE.

 - Function: GtkProgressBar* GTK_PROGRESS_BAR (gpointer OBJ)
     Cast a generic pointer to `GtkProgressBar*'. *Note Standard
     Macros::, for more info.

 - Function: GtkProgressBarClass* GTK_PROGRESS_BAR_CLASS (gpointer
          CLASS)
     Cast a generic pointer to `GtkProgressBarClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_PROGRESS_BAR (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkProgressBar'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkRadioButton,  Next: GtkRadioMenuItem,  Prev: GtkProgressBar,  Up: Widgets

The radio button widget
=======================

Description
-----------

Options
-------

 - User Option: group

 - User Option: label

Signals
-------

Functions
---------

 - Function: guint gtk_radio_button_get_type (void)
     Returns the `GtkRadioButton' type identifier.

 - Function: GtkWidget* gtk_radio_button_new (GSList *GROUP)
     Create a new `GtkRadioButton' object initializing it with the value
     in the GROUP argument. The new widget is returned as a pointer to a
     `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_radio_button_new_with_label (GSList *GROUP,
          gchar *LABEL)
     Create a new `GtkRadioButton' object initializing it with the
     values in the GROUP and LABEL arguments. The new widget is
     returned as a pointer to `GtkWidget' object. `NULL' is returned on
     failure.

 - Function: GSList* gtk_radio_button_group (GtkRadioButton
          *RADIO_BUTTON)

 - Function: GtkRadioButton* GTK_RADIO_BUTTON (gpointer OBJ)
     Cast a generic pointer to `GtkRadioButton*'. *Note Standard
     Macros::, for more info.

 - Function: GtkRadioButtonClass* GTK_RADIO_BUTTON_CLASS (gpointer
          CLASS)
     Cast a generic pointer to `GtkRadioButtonClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_RADIO_BUTTON (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkRadioButton'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkRadioMenuItem,  Next: GtkRange,  Prev: GtkRadioButton,  Up: Widgets

The radio button widget
=======================

Description
-----------

Options
-------

 - User Option: group

 - User Option: label

Signals
-------

Functions
---------

 - Function: guint gtk_radio_menu_item_get_type (void)
     Returns the `GtkRadioMenuItem' type identifier.

 - Function: GtkWidget* gtk_radio_menu_item_new (GSList *GROUP)
     Create a new `GtkRadioMenuItem' object and initialize it with the
     values in GROUP. The new widget is returned as a pointer to a
     `GtkWidget' object. `NULL' is returned on failure.

 - Function: GtkWidget* gtk_radio_menu_item_new_with_label (GSList
          *GROUP, gchar *LABEL)

 - Function: GSList* gtk_radio_menu_item_group (GtkRadioMenuItem
          *RADIO_MENU_ITEM)

 - Function: GtkRadioMenuItem* GTK_RADIO_MENU_ITEM (gpointer OBJ)
     Cast a generic pointer to `GtkRadioMenuItem*'. *Note Standard
     Macros::, for more info.

 - Function: GtkRadioMenuItemClass* GTK_RADIO_MENU_ITEM_CLASS (gpointer
          CLASS)
     Cast a generic pointer to `GtkRadioMenuItemClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_RADIO_MENU_ITEM (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkRadioMenuItem'
     object. *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkRange,  Next: GtkRuler,  Prev: GtkRadioMenuItem,  Up: Widgets

The range widget
================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_range_get_type (void)
     Returns the `GtkRange' type identifier.

 - Function: GtkAdjustment* gtk_range_get_adjustment (GtkRange *RANGE)

 - Function: void gtk_range_set_update_policy (GtkRange *RANGE,
          GtkUpdatePolicy POLICY)

 - Function: void gtk_range_set_adjustment (GtkRange *RANGE,
          GtkAdjustment *ADJUSTMENT)

 - Function: void gtk_range_draw_background (GtkRange *RANGE)

 - Function: void gtk_range_draw_trough (GtkRange *RANGE)

 - Function: void gtk_range_draw_slider (GtkRange *RANGE)

 - Function: void gtk_range_draw_step_forw (GtkRange *RANGE)

 - Function: void gtk_range_draw_step_back (GtkRange *RANGE)

 - Function: void gtk_range_slider_update (GtkRange *RANGE)

 - Function: gint gtk_range_trough_click (GtkRange *RANGE, gint X, gint
          Y)

 - Function: void gtk_range_default_hslider_update (GtkRange *RANGE)

 - Function: void gtk_range_default_vslider_update (GtkRange *RANGE)

 - Function: gint gtk_range_default_htrough_click (GtkRange *RANGE,
          gint X, gint Y)

 - Function: gint gtk_range_default_vtrough_click (GtkRange *RANGE,
          gint X, gint Y)

 - Function: void gtk_range_default_hmotion (GtkRange *RANGE, gint
          XDELTA, gint YDELTA)

 - Function: void gtk_range_default_vmotion (GtkRange *RANGE, gint
          XDELTA, gint YDELTA)

 - Function: gfloat gtk_range_calc_value (GtkRange *RANGE, gint
          POSITION)

 - Function: GtkRange* GTK_RANGE (gpointer OBJ)
     Cast a generic pointer to `GtkRange*'. *Note Standard Macros::, for
     more info.

 - Function: GtkRangeClass* GTK_RANGE_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkRangeClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_RANGE (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkRange' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkRuler,  Next: GtkScale,  Prev: GtkRange,  Up: Widgets

The ruler widget
================

Description
-----------

Options
-------

 - User Option: metric

 - User Option: lower

 - User Option: upper

 - User Option: position

 - User Option: max_size

Signals
-------

Functions
---------

 - Function: guint gtk_ruler_get_type (void)
     Returns the `GtkRuler' type identifier.

 - Function: void gtk_ruler_set_metric (GtkRuler *RULER, GtkMetricType
          METRIC)

 - Function: void gtk_ruler_set_range (GtkRuler *RULER, gfloat LOWER,
          gfloat UPPER, gfloat POSITION, gfloat MAX_SIZE)

 - Function: void gtk_ruler_draw_ticks (GtkRuler *RULER)

 - Function: void gtk_ruler_draw_pos (GtkRuler *RULER)

 - Function: GtkRuler* GTK_RULER (gpointer OBJ)
     Cast a generic pointer to `GtkRuler*'. *Note Standard Macros::, for
     more info.

 - Function: GtkRulerClass* GTK_RULER_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkRulerClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_RULER (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkRuler' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkScale,  Next: GtkScrollbar,  Prev: GtkRuler,  Up: Widgets

The scale widget
================

Description
-----------

Options
-------

 - User Option: digits

 - User Option: draw_value

 - User Option: pos

Signals
-------

Functions
---------

 - Function: guint gtk_scale_get_type (void)
     Returns the `GtkScale' type identifier.

 - Function: void gtk_scale_set_digits (GtkScale *SCALE, gint DIGITS)

 - Function: void gtk_scale_set_draw_value (GtkScale *SCALE, gint
          DRAW_VALUE)

 - Function: void gtk_scale_set_value_pos (GtkScale *SCALE, gint POS)

 - Function: gint gtk_scale_value_width (GtkScale *SCALE)

 - Function: void gtk_scale_draw_value (GtkScale *SCALE)

 - Function: GtkScale* GTK_SCALE (gpointer OBJ)
     Cast a generic pointer to `GtkScale*'. *Note Standard Macros::, for
     more info.

 - Function: GtkScaleClass* GTK_SCALE_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkScaleClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_SCALE (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkScale' object.
     *Note Standard Macros::, for more info.


File: gtk.info,  Node: GtkScrollbar,  Next: GtkScrolledWindow,  Prev: GtkScale,  Up: Widgets

The scrollbar widget
====================

Description
-----------

Options
-------

Signals
-------

Functions
---------

 - Function: guint gtk_scrollbar_get_type (void)a
     Returns the `GtkScrollbar' type identifier.

 - Function: GtkScrollbar* GTK_SCROLLBAR (gpointer OBJ)
     Cast a generic pointer to `GtkScrollbar*'. *Note Standard
     Macros::, for more info.

 - Function: GtkScrollbarClass* GTK_SCROLLBAR_CLASS (gpointer CLASS)
     Cast a generic pointer to `GtkScrollbarClass*'. *Note Standard
     Macros::, for more info.

 - Function: gint GTK_IS_SCROLLBAR (gpointer OBJ)
     Determine if a generic pointer refers to a `GtkScrollbar' object.
     *Note Standard Macros::, for more info.

